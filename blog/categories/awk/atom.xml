<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: awk | MQTT and ...]]></title>
  <link href="http://mm011106.github.io/blog/categories/awk/atom.xml" rel="self"/>
  <link href="http://mm011106.github.io/"/>
  <updated>2015-01-14T21:14:01+09:00</updated>
  <id>http://mm011106.github.io/</id>
  <author>
    <name><![CDATA[Masakazu Miyamoto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[awkを使う]]></title>
    <link href="http://mm011106.github.io/blog/2014/12/14/awk-example/"/>
    <updated>2014-12-14T09:04:24+09:00</updated>
    <id>http://mm011106.github.io/blog/2014/12/14/awk-example</id>
    <content type="html"><![CDATA[<p>いま、MQTTでデータを送っていますが、データの最初のフィールドがエポックタイムになっています。なので、データをパッと見たところでは何時のデータなのか分かりません。
そこで、awkを使って普通の表示にしてやります。</p>

<!-- more -->


<p>まずは、最初のフィールドを切り出す必要があります。これは簡単で</p>

<pre><code>awk -F, '{print $1}'
</code></pre>

<p>です。セパレータがコンマなので、-Fオプションで変更します。セパレータで区切られた最初のフィールドがプリントされます。</p>

<p>これだけだと</p>

<pre><code>1418394962
1418395021
1418395081
1418395142
1418395202
</code></pre>

<p>なかんじなのでこれをdate コマンドで時刻表示に変換してあげます。
strftime()なる関数があるawk処理系もあるようですが、ここではシェルコマンドを使ってやってみました。</p>

<p>単純には</p>

<pre><code>date -d @`cat data.txt|awk -F, '{print $1}'`
</code></pre>

<p>とやるとよさそうですが、複数行だとエラーします。</p>

<p>なので、各行ごとにdateコマンドが発行される必要があります。
ということはawk中で処理する必要があるということで。。。。</p>

<pre><code>cat data.txt|awk -F, '{cmd="date -d @"$1; system(cmd)}'
</code></pre>

<p>これで、</p>

<pre><code>2014年 12月 13日 土曜日 00:02:01 JST
2014年 12月 13日 土曜日 00:03:02 JST
2014年 12月 13日 土曜日 00:04:01 JST
2014年 12月 13日 土曜日 00:05:01 JST
</code></pre>

<p>こんな感じになります。ひとまずok。</p>

<p>で、さらに、この日付の後、データを表示しようとおもって、</p>

<pre><code>cat data.txt|awk -F, '{cmd="date -d @"$1; system(cmd); print $2"  "$3}'
</code></pre>

<p>とすると。。。。</p>

<pre><code>2014年 12月 13日 土曜日 00:05:01 JST
 1710   2004
2014年 12月 13日 土曜日 00:06:02 JST
 1709   2002
2014年 12月 13日 土曜日 00:07:01 JST
 1710   2003
</code></pre>

<p>コマンド実行結果に改行コードが入っているので、こんなになってしまいます。
これではいけないということで、色々調べてみると</p>

<pre><code>cat data.txt|awk -F, '{cmd="date -d @"$1; cmd | getline result; close(cmd); print result "  " $2"  "$3}'
</code></pre>

<p>としてやるといいことが分かりました。変数にコマンドを書いて、それを実行して結果を得るために　cmd | getline 変数（結果が入る） というのが想像できませんでした。</p>

<pre><code>2014年 12月 13日 土曜日 00:09:01 JST   1710   2003
2014年 12月 13日 土曜日 00:10:02 JST   1710   2002
2014年 12月 13日 土曜日 00:11:02 JST   1709   2003
</code></pre>

<p>これで、望むフォーマットになりました。</p>

<p>日付と時間だけをプリントするのはdateコマンドにフォーマット指示を追加して</p>

<pre><code>cmd= "date +\"%F %T\" -d @"
</code></pre>

<p>フォーマット内部にスペースを指定するためにはダブルクオートでフォーマットをくくる必要があります。awkにはバックスラッシュでダブルクオートをエスケープしておきます。</p>
]]></content>
  </entry>
  
</feed>
