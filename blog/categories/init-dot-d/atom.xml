<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: init.d, | MQTT and ...]]></title>
  <link href="http://mm011106.github.io/blog/categories/init-dot-d/atom.xml" rel="self"/>
  <link href="http://mm011106.github.io/"/>
  <updated>2015-12-06T11:22:48+09:00</updated>
  <id>http://mm011106.github.io/</id>
  <author>
    <name><![CDATA[Masakazu Miyamoto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[起動スクリプトで環境変数を読み込む]]></title>
    <link href="http://mm011106.github.io/blog/2015/02/25/read-env-in-init-dot-d/"/>
    <updated>2015-02-25T21:03:27+09:00</updated>
    <id>http://mm011106.github.io/blog/2015/02/25/read-env-in-init-dot-d</id>
    <content type="html"><![CDATA[<p>環境変数でデバイスのパラメタを指定することを考えてみました。<br/>
システムワイドの環境変数設定は<code>/etc/environment</code>に入れるようですが、実際にこれを使いたいと思うのは起動時、という場合が多いのでちょっと困りものです。</p>

<!-- more -->


<p>というのも、起動時の環境変数はユーザ環境での環境変数とは違う設定になっているからです。
試してみましたが、やはり/etc/environmentでの設定は起動時には有効になっていません。なので、必要なスクリプトでこれを読み込むことを考えてみました。</p>

<p>最初、</p>

<pre><code class="sh">cat /etc/environment | while read -r env; do export "$env"; done
</code></pre>

<p>とやってみたのですが、全くだめ。</p>

<blockquote><p><strong>2014/2/26</strong> 追記<br/>
これはパイプじゃダメで、リダイレクトがいいみたいです。
<code>while read -r env; do export "$env"; done &lt; /etc/environment</code><br/>
とするとうまく行きました。</p></blockquote>

<p>環境変数がプロセスの中だけで有効なのかなと思い、ループの中で環境変数を表示してみてもだめ。<br/>
その後、いろいろ検索してみると</p>

<pre><code class="sh">for line in $( cat /etc/environment ) 
  do
    export $line
  done
</code></pre>

<p>というスクリプトを見つけました。</p>

<p>こちらを試してみました。このシェルスクリプト内のループの後で環境変数を表示させてみるとうまく設定できています。<br/>
ただ、このシェルスクリプトをコマンドラインから実行して、帰ってくると設定した環境変数は無くなっています。</p>

<p>スクリプト内では環境変数を維持できそうなので、早速init.dの起動スクリプトで試してみました。</p>

<p>結果は、良好！。無事、設定された環境変数を読み出すことが出来ました。</p>

<p>さらにもう一つ、大事なことを勉強しました。環境変数の設定は、</p>

<pre><code class="sh">VAR=hogehoge
# これが正しい
VAR="hogehoge"
# とすると、""も変数に入ってしまう
</code></pre>

<p>結果、init.dの起動スクリプトでは、必要最低限のPATH指定もやってあげてから、/etc/environmentの内容を読み込むようにしました。<br/>
環境変数の読み出し時に、空行とコメントを取り外すためのgrepコマンドを入れています。</p>

<pre><code class="sh">PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

#
#  Read environment 
#
for line in $( cat /etc/environment | grep -v '^\s*#' | grep -v '^\s*$') 
  do
    export $line
  done
</code></pre>

<p>また一歩進みました。<br/>
これで、init.d用のスクリプトの中でも不自由することが少なくなるように思います。</p>

<p>それにしても、本題と関係ないところで結構時間をとってるなあ。。。。。</p>
]]></content>
  </entry>
  
</feed>
